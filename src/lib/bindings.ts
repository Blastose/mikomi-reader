/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function getBook(id: string) {
    return invoke()<BookWithAuthorsAndCoverAndBookmarks | null>("get_book", { id })
}

export function getBooks() {
    return invoke()<BookWithAuthorsAndCover[]>("get_books")
}

export function addBookFromFile(path: string) {
    return invoke()<Book>("add_book_from_file", { path })
}

export function addMultipleBooksFromFiles(paths: string[]) {
    return invoke()<null>("add_multiple_books_from_files", { paths })
}

export function addBookmark(newBookmark: Bookmark) {
    return invoke()<null>("add_bookmark", { newBookmark })
}

export function removeBookmark(id: string) {
    return invoke()<null>("remove_bookmark", { id })
}

export function updateBookmark(id: string, displayText: string) {
    return invoke()<null>("update_bookmark", { id,displayText })
}

export function getEpub(path: string) {
    return invoke()<EpubData>("get_epub", { path })
}

export type BookWithAuthorsAndCover = ({ id: string; title: string; path: string }) & { authors: Author[]; cover: string | null }
export type Toc = { kind: TocKind; content: string; path: string }
export type EpubData = { html: ([string, string])[]; img: { [key: string]: [number[], number, number] }; css: { [key: string]: string }; toc: Toc | null }
export type BookWithAuthorsAndCoverAndBookmarks = ({ id: string; title: string; path: string }) & { authors: Author[]; bookmarks: Bookmark[]; cover: string | null }
export type TocKind = "Ncx" | "Nav"
export type Book = { id: string; title: string; path: string }
export type Author = { id: string; name: string }
export type Bookmark = { id: string; book_id: string; display_text: string; date_added: number; css_selector: string }
